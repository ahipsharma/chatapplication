package com.company;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.ScrollBarUI;
import javax.swing.plaf.basic.BasicScrollBarUI;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class Client implements ActionListener{

        JPanel p1;
        JTextField t1;
        JButton b1;
        static JPanel a1;
        static JFrame f1 = new JFrame();

        static Box vertical = Box.createVerticalBox();


        static Socket s;
        static DataInputStream din;
        static DataOutputStream dout;

        Boolean typing;

        Client(){
                f1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                p1 = new JPanel();
                p1.setLayout(null);
                p1.setBackground(new Color(7, 94, 84));
                p1.setBounds(0, 0, 450, 70);
                f1.add(p1);

                ImageIcon i1 = new ImageIcon(ClassLoader.getSystemResource("com/company/ICONS/3.png"));
                Image i2 = i1.getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT);
                ImageIcon i3 = new ImageIcon(i2);
                JLabel l1 = new JLabel(i3);
                l1.setBounds(5, 17, 30, 30);
                p1.add(l1);

                l1.addMouseListener(new MouseAdapter(){
                        public void mouseClicked(MouseEvent ae){
                                System.exit(0);
                        }
                });


                //ADDS DP OF THE USER.
                ImageIcon i4 = new ImageIcon(ClassLoader.getSystemResource("com/company/ICONS/moosewwala.png"));
                Image i5 = i4.getImage().getScaledInstance(60, 60, Image.SCALE_DEFAULT);
                ImageIcon i6 = new ImageIcon(i5);
                JLabel l2 = new JLabel(i6);
                l2.setBounds(40, 5, 60, 60);
                p1.add(l2);


                //ADDS THE VIDEO CALL ICON.
                ImageIcon i7 = new ImageIcon(ClassLoader.getSystemResource("com/company/ICONS/video.png"));
                Image i8 = i7.getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT);
                ImageIcon i9 = new ImageIcon(i8);
                JLabel l5 = new JLabel(i9);
                l5.setBounds(290, 20, 30, 30);
                p1.add(l5);


                //ADDS THE VOICE CALL ICON.
                ImageIcon i11 = new ImageIcon(ClassLoader.getSystemResource("com/company/ICONS/phone.png"));
                Image i12 = i11.getImage().getScaledInstance(35, 30, Image.SCALE_DEFAULT);
                ImageIcon i13 = new ImageIcon(i12);
                JLabel l6 = new JLabel(i13);
                l6.setBounds(350, 20, 35, 30);
                p1.add(l6);


                //ADDS THE OPTION BUTTON.
                ImageIcon i14 = new ImageIcon(ClassLoader.getSystemResource("com/company/ICONS/3icon.png"));
                Image i15 = i14.getImage().getScaledInstance(13, 25, Image.SCALE_DEFAULT);
                ImageIcon i16 = new ImageIcon(i15);
                JLabel l7 = new JLabel(i16);
                l7.setBounds(410, 20, 13, 25);
                p1.add(l7);

                //ADDS THE NAME OF USER.
                JLabel l3 = new JLabel("Jaspreet Singh Sodhi");
                l3.setFont(new Font("SAN_SERIF", Font.BOLD, 16));
                l3.setForeground(Color.WHITE);
                l3.setBounds(110, 15, 100, 18);
                p1.add(l3);

                //GIVES THE STATUS OF USER.
                JLabel l4 = new JLabel("Active Now");
                l4.setFont(new Font("SAN_SERIF", Font.PLAIN, 14));
                l4.setForeground(Color.WHITE);
                l4.setBounds(110, 35, 100, 20);
                p1.add(l4);

                Timer t = new Timer(1, new ActionListener(){
                        public void actionPerformed(ActionEvent ae){
                                if(!typing){
                                        l4.setText("Active Now");
                                }
                        }
                });

                t.setInitialDelay(2000);

                a1 = new JPanel();
                a1.setBounds(5, 75, 440, 570);
                a1.setFont(new Font("SAN_SERIF", Font.PLAIN, 16));
                f1.add(a1);

                JScrollPane jp = new JScrollPane(a1);
                jp.setBounds(5, 75, 440, 570);
                jp.setBorder(BorderFactory.createEmptyBorder());
                f1.add(jp);


                //FUNCTION TO ADD SCROLL BAR IN THE TEXT FIELD.
                ScrollBarUI ui = new BasicScrollBarUI(){
                        @Override
                        protected JButton createDecreaseButton(int orientation) {
                                JButton button =   super.createDecreaseButton(orientation);
                                button.setBackground(new Color(7,94,84));
                                button.setForeground(Color.WHITE);
                                this.thumbColor = new Color(7,94,84);
                                return button;
                        }

                        @Override
                        protected JButton createIncreaseButton(int orientation) {
                                JButton button =   super.createIncreaseButton(orientation);
                                button.setBackground(new Color(7,94,84));
                                button.setForeground(Color.WHITE);
                                this.thumbColor = new Color(7,94,84);
                                return button;
                        }
                };

                jp.getVerticalScrollBar().setUI(ui);
                f1.add(jp);



                t1 = new JTextField();
                t1.setBounds(5, 655, 310, 40);
                t1.setFont(new Font("SAN_SERIF", Font.PLAIN, 16));
                f1.add(t1);

                t1.addKeyListener(new KeyAdapter(){
                        public void keyPressed(KeyEvent ke){
                                l4.setText("typing...");

                                t.stop();

                                typing = true;
                        }

                        public void keyReleased(KeyEvent ke){
                                typing = false;

                                if(!t.isRunning()){
                                        t.start();
                                }
                        }
                });


                //GIVES THE OPTION TO SEND MESSAGE
                b1 = new JButton("Send");
                b1.setBounds(320, 655, 123, 40);
                b1.setBackground(new Color(7, 94, 84));

                b1.setFont(new Font("SAN_SERIF", Font.PLAIN, 16));
                b1.addActionListener(this);
                f1.add(b1);

                f1.getContentPane().setBackground(Color.WHITE);
                f1.setLayout(null);
                f1.setSize(450, 700);
                f1.setLocation(800, 20);
                f1.setUndecorated(true);
                f1.setVisible(true);

        }

        public void actionPerformed(ActionEvent ae){

                try{
                        String out = t1.getText();
                        sendtexttofile(out);

                        JPanel p2 = formatLabel(out);

                        a1.setLayout(new BorderLayout());

                        JPanel right = new JPanel(new BorderLayout());
                        right.add(p2, BorderLayout.LINE_END);
                        vertical.add(right);
                        vertical.add(Box.createVerticalStrut(15));

                        a1.add(vertical, BorderLayout.PAGE_START);

                        //a1.add(p2);
                        dout.writeUTF(out);
                        t1.setText("");
                }catch(Exception e){
                        System.out.println(e);
                }
        }
        private void sendtexttofile(String out) {
                try {
                        FileWriter f = new FileWriter("chat.txt",true);
                        PrintWriter p = new PrintWriter(new BufferedWriter(f));
                        p.println("Bunty: " + out);


                }

                catch (IOException e) {
                        e.printStackTrace();
                }
        }
        public static JPanel formatLabel(String out){
                JPanel p3 = new JPanel();
                p3.setLayout(new BoxLayout(p3, BoxLayout.Y_AXIS));

                JLabel l1 = new JLabel("<html><p style = \"width : 150px\">"+out+"</p></html>");
                l1.setFont(new Font("Tahoma", Font.PLAIN, 16));
                l1.setBackground(new Color(37, 211, 102));
                l1.setOpaque(true);
                l1.setBorder(new EmptyBorder(15,15,15,50));
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");

                JLabel l2 = new JLabel();
                l2.setText(sdf.format(cal.getTime()));
                p3.add(l1);
                p3.add(l2);
                return p3;
        }

        //METHOD TO SEND MESSAGE BETWEEN 2 USERS.
        public static void main(String[] args){
                new Client().f1.setVisible(true);

                try{

                        s = new Socket("127.0.0.1", 6001);
                        din  = new DataInputStream(s.getInputStream());
                        dout = new DataOutputStream(s.getOutputStream());

                        String msginput = "";

                        while(true){
                                a1.setLayout(new BorderLayout());
                                msginput = din.readUTF();
                                JPanel p2 = formatLabel(msginput);
                                JPanel left = new JPanel(new BorderLayout());
                                left.add(p2, BorderLayout.LINE_START);

                                vertical.add(left);
                                vertical.add(Box.createVerticalStrut(15));
                                a1.add(vertical, BorderLayout.PAGE_START);
                                f1.validate();
                        }
                }catch(Exception e){

                }
        }
}
